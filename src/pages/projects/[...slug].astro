---
import Base from '@/layouts/Base.astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';
import FormattedDate from '@/components/FormattedDate.astro';
import { Button } from '@/components/ui/button';
import { ArrowLeftIcon } from '@radix-ui/react-icons';

export async function getStaticPaths() {
  const posts = await getCollection('project');
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'project'>;

const post = Astro.props;
const { Content } = await render(post);
const { title, description, startDate, updatedDate, heroImage } = post.data;
---

<!-- <div class="hero-image">
      {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
    </div> -->
<Base>
  <article class="mx-auto max-w-3xl pt-12 px-4">
    <div class="prose prose-lg dark:prose-invert">
      <a href="/projects" class="flex flex-row gap-4 items-center">
        <ArrowLeftIcon />
        Back to overview
      </a>
      <header class="my-12">
        <h1 class="mt-2 text-5xl font-bold text-gradient">
          {title}
        </h1>
        <div
          class="text-sm text-muted-foreground font-semibold flex flex-col sm:flex-row sm:items-center sm:gap-4"
        >
          <FormattedDate
            date={startDate}
            class:list={['text-muted-foreground', 'font-medium']}
          />
          {
            updatedDate && (
              <div class="text-sm sm:text-base text-muted-foreground">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
      </header>
      <section class="markdown-content">
        <Content class="prose markdown-content" />
      </section>
    </div>
  </article>
</Base>
